/* Hide original controls except progress bar */
.z-menu.cursor-pointer.inline-flex.css-manbx0.hydrated,
button.flex.items-end:not(.css-19urstm),
button.flex.items-end.cursor-pointer.css-19urstm,
.w-4.h-3.text-sm.border.rounded-sm.p-1px.border-glyph-light {
  display: none !important;
}

/* First, let's add the base styles for control visibility */
.video-controls-wrapper {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    /* Add transition for smooth fade effect */
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    /* Make sure it's above the video but below any critical overlays */
    z-index: 1000;
    /* Add gradient background for better visibility */
    background: linear-gradient(to top, 
        rgba(0, 0, 0, 0.9) 0%, 
        rgba(0, 0, 0, 0.7) 40%, 
        transparent 100%);
    padding: 8px 0;
}

/* Show controls when hovering over the video player */
video-player:hover .video-controls-wrapper {
    opacity: 1;
    transform: translateY(0);
}

/* Ensure controls stay visible while hovering over them */
.video-controls-wrapper:hover {
    opacity: 1;
    transform: translateY(0);
}

/* Progress bar container */
.progress-bar-container {
  width: 100%;
  padding: 0 16px;
  margin-bottom: 6px;
}

video-player:hover .progress-bar-container {
    opacity: 1;
}

/* Ensure the progress bar is visible */
ui-playhead {
  display: flex !important;
  width: 100% !important;
}

/* Custom controls styling */
.fathom-custom-controls {
  display: flex !important;
  align-items: center;
  justify-content: space-between;
  padding: 0 8px;
  width: 100%;
  opacity: 1 !important;
  visibility: visible !important;
}


/* Define the rotation animations */
@keyframes rotateBackward {
    0% { transform: rotate(0deg); }
    50% { transform: rotate(-20deg); }
    100% { transform: rotate(0deg); }
}

@keyframes rotateForward {
    0% { transform: rotate(0deg); }
    50% { transform: rotate(20deg); }
    100% { transform: rotate(0deg); }
}

/* Base styles for skip buttons */
.skip-button {
    opacity: 0.85;
    transition: opacity 0.2s ease;
    position: relative;
}

.skip-button:hover {
    opacity: 1;
}

/* Add a subtle scaling effect on hover */
.skip-button svg {
    transition: transform 0.2s ease;
}

.skip-button:hover svg {
    transform: scale(1.1);
}

/* Animation classes for the buttons */
.skip-button.animate-backward svg {
    animation: rotateBackward 0.5s ease;
}

.skip-button.animate-forward svg {
    animation: rotateForward 0.5s ease;
}

/* Optional: Add a ripple effect for more visual feedback */
.skip-button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s ease, height 0.3s ease;
}

.skip-button:active::after {
    width: 35px;
    height: 35px;
}
.controls-left {
  display: flex;
  align-items: center;
  gap: 8px;
}

.controls-right {
  display: flex;
  align-items: center;
  gap: 16px;
}

.control-button {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  padding: 4px 4px;
  border-radius: 50%;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1 !important;
  visibility: visible !important;
}

.control-button:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.time-display {
  color: white;
  font-size: 14px;
  font-family: system-ui, -apple-system, sans-serif;
  opacity: 1 !important;
  visibility: visible !important;
}


.speed-button span {
    font-size: 14px;
    font-family: system-ui, -apple-system, sans-serif;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Speed menu styling */
/* Speed control container styling */
.speed-container {
    position: relative;
    display: flex;
    align-items: center;
    flex-direction: row-reverse; /* This makes children flow from right to left */
}

.speed-slider-container {
    width: 0;
    height: 100%;
    overflow: hidden;
    transition: width 0.2s ease;
    display: flex;
    align-items: center;
    padding: 0 10px;
}

.speed-container:hover .speed-slider-container {
    width: 100px;
}

.speed-slider-wrapper {
    position: relative;
    width: 80px;
    height: 24px;
    display: flex;
    align-items: center;
}

.speed-slider-background {
    position: absolute;
    left: 0;
    right: 0;
    height: 4px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2px;
    pointer-events: none;
}

.speed-slider-progress {
    position: absolute;
    left: 0;
    height: 4px;
    background: white;
    border-radius: 2px;
    pointer-events: none;
    transition: width 0.1s ease;
}

.speed-slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 100%;
    background: transparent;
    outline: none;
    cursor: pointer;
    position: relative;
    margin: 0;
    z-index: 2;
}

/* Speed slider thumb styles - hidden by default */
.speed-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    transition: all 0.2s ease;
    opacity: 0;
    transform: scale(0);
}

.speed-slider::-moz-range-thumb {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    border: none;
    transition: all 0.2s ease;
    opacity: 0;
    transform: scale(0);
}

/* Show thumb on container hover */
.speed-container:hover .speed-slider::-webkit-slider-thumb {
    opacity: 1;
    transform: scale(1);
}

.speed-container:hover .speed-slider::-moz-range-thumb {
    opacity: 1;
    transform: scale(1);
}

/* Hover effect for the thumb */
.speed-container:hover .speed-slider::-webkit-slider-thumb:hover {
    transform: scale(1.2);
}

.speed-container:hover .speed-slider::-moz-range-thumb:hover {
    transform: scale(1.2);
}



/* Volume slider thumb styles - hide by default */
.volume-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    transition: all 0.2s ease;
    /* Hide the thumb by default */
    opacity: 0;
    transform: scale(0);
}

.volume-slider::-moz-range-thumb {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: white;
    cursor: pointer;
    border: none;
    transition: all 0.2s ease;
    /* Hide the thumb by default */
    opacity: 0;
    transform: scale(0);
}

/* Show thumb on container hover */
.volume-container:hover .volume-slider::-webkit-slider-thumb {
    opacity: 1;
    transform: scale(1);
}

.volume-container:hover .volume-slider::-moz-range-thumb {
    opacity: 1;
    transform: scale(1);
}


/* Make sure the thumb visibility follows the container */
.volume-container:hover .volume-slider::-webkit-slider-thumb,
.volume-slider-visible .volume-slider::-webkit-slider-thumb {
    opacity: 1;
    transform: scale(1);
}

.volume-container:hover .volume-slider::-moz-range-thumb,
.volume-slider-visible .volume-slider::-moz-range-thumb {
    opacity: 1;
    transform: scale(1);
}

/* Keep the rest of the volume slider styles the same */
.volume-container {
    position: relative;
    display: flex;
    align-items: center;
    /* Remove any default margins/padding */
    margin: 0;
    padding: 0;
}

/* Volume slider container with adjusted padding */
.volume-slider-container {
    width: 0;
    height: 100%;
    overflow: hidden;
    transition: width 0.2s ease;
    display: flex;
    align-items: center;
    /* Remove the default padding when not visible */
    padding: 0;
}

/* When hovering, add the padding along with the width */
.volume-container:hover .volume-slider-container,
.volume-slider-container.volume-slider-visible {
    width: 100px;
    padding: 0 10px;
}

/* Volume slider wrapper adjustments */
.volume-slider-wrapper {
    position: relative;
    width: 100%;
    height: 24px;
    display: flex;
    align-items: center;
    /* Ensure no minimum width when container is collapsed */
    min-width: 0;
}
.volume-slider-background {
    position: absolute;
    left: 0;
    right: 0;
    height: 4px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 2px;
    pointer-events: none;
}

.volume-slider-progress {
    position: absolute;
    left: 0;
    height: 4px;
    background: white;
    border-radius: 2px;
    pointer-events: none;
    transition: width 0.1s ease;
}

.volume-slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 100%;
    background: transparent;
    outline: none;
    cursor: pointer;
    position: relative;
    margin: 0;
    z-index: 2;
}

/* Loader container positioning */
.video-loader-container {
    position: absolute;
    top: 50%;  /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Perfect centering */
    z-index: 2000; /* High enough to be above the video but below any overlays */
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none; /* Allow clicking through the loader */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease;
    /* Make sure it spans the full video area */
    width: 100%;
    height: 100%;
    /* Add a slight dark background to make loader more visible */
    background: rgba(0, 0, 0, 0.2);
}

/* Show loader when has .loading class */
.video-loader-container.loading {
    opacity: 1;
    visibility: visible;
}

/* Spinner styles */
/* Rest of your spinner styles remain the same */
.spinner-container {
    width: 70px;
    height: 70px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.spinner-ring {
    width: 100%;
    height: 100%;
    border: 5px solid rgba(255, 255, 255, 0.2);
    border-top-color: #ffffff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}